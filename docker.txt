https://www.docker.com/get-started/
  install from it
https://hub.docker.com/

      искать образы или explore (?)
node:      https://hub.docker.com/_/node
 тут ссылка     How to use this image
See How To Use This Image on GitHub for up-to-date documentation.
https://github.com/nodejs/docker-node/blob/main/README.md#how-to-use-this-image

как
файл   Dockerfile
или
Run a single Node.js script
$ docker run -it --rm --name my-running-script -v "$PWD":/usr/src/app -w /usr/src/app node:8 node your-daemon-or-script.js

     node:alpine          +small linux 5mb

FROM node:16-alpine
EXPOSE 8888

FROM node:16-alpine
WORKDIR /frontend  корнев директори
RUN npm install -g @angular/cl

сначала скопировать        package.json и установить зависимости, а только потом файлы проекта- эеономия ресурсов,
тк мб закешированы пакеты из       node_modules

COPY package.json .          копировать куда - в корневую директорию .    (относит путь, а не абсолютный!)
RUN npm install
COPY . .      все что есть внутрь докер-контейнера, того, где мы есть
EXPOSE 4200     прокинуть наружу, чтобы обратиться со своего комп по порту 4200

CMD команда при запуске контейнера для ng serve  --host 0.0.0.0 --port 4200 (не RUN! это инст-я для выпорлнения, когда контейнер будет еще запускаться')
CMD ng serve  --host 0.0.0.0 --port 4200

почитать о всех командах
https://docs.docker.com/reference/
https://docs.docker.com/reference/dockerfile/

далее образ нужно скомпилировать, сделать билд
нужно указать, какие папки не включать.   ! node_modules вообще удалить
.dockerignore    создать файл и включить в него игнорируемое
ls -la       посмотреть список папок  и файлов в директории

.dockerignore

etc
node_modules
dist
docs
.angular
.firebase
.idea
etc

docker build -t имя-проекта путь-к-Dockerfile
Важно убедиться, что мы в корне проекта перед запуском!
docker build -t pizza-app .
после выполнения набрать
docker images

итого
=======================================
FROM node:19-alpine
WORKDIR /frontend
RUN npm install -g @angular/cli
COPY package.json .
RUN npm install --force
COPY . .
EXPOSE 4200
CMD ng serve  --host 0.0.0.0 --port 4200
=======================================

я
19   FROM node:19-alpine
--force RUN npm install --force
очистка места/ перезагрузка комп
mongodb-windows-x86_64-7.0.7-signed.msi
Docker Desktop Installer.exe
studio-3t-x64.zip
MSERT.exe

 docker images


Полезные ссылки на сторонние ресурсы:

    Официальная документация Docker (на англ. языке).
    https://docs.docker.com/
    Docker для веб-разработки: Руководство для начинающих.
    https://appmaster.io/ru/blog/docker-dlia-veb-razrabotki
    Руководство по Docker для начинающих.
    https://techrocks.ru/2021/10/17/beginners-guide-to-docker/
    Введение, Docker CLI и Dockerfile.
https://my-js.org/docs/guide/docker/
    Руководство по Docker. Часть 1: образ, контейнер, сопоставление портов и основные команды.
https://medium.com/nuances-of-programming/%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%BF%D0%BE-docker-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D0%BE%D0%B1%D1%80%D0%B0%D0%B7-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80-%D1%81%D0%BE%D0%BF%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D0%BE%D1%80%D1%82%D0%BE%D0%B2-%D0%B8-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B-4997f2968925
    Полное практическое руководство по Docker: с нуля до кластера на AWS.
https://habr.com/ru/articles/310460/
    Установка и использование Docker в Ubuntu 20.04.
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04-ru
    Docker – руководство для начинающих.
https://rus-linux.net/MyLDP/vm/docker/docker-tutorial.html
    Видео: Docker с 0 до 100%. Всё, что нужно знать.
https://youtu.be/O8N1lvkIjig
В этом уроке:
Вы познакомитесь с таким инструментом, как Docker. Это важный инструмент для разработчиков, облегчающий создание, развертывание и управление приложениями в изолированных контейнерах.

В этом уроке:
1. Общее понимание Docker и его роли в разработке ПО.
2. Основы работы с Docker: создание и использование контейнеров и образов.
3. Работа с Docker Hub и публичными образами.
4. Создание Dockerfile для настройки собственных образов.
5. Практические примеры создания и запуска приложений в Docker.
6. Работа с volumes в Docker для управления данными.
7. Примеры использования Docker для развертывания веб-приложений с использованием Nginx.
8. Практические советы по управлению контейнерами и образами.


если нужно удалить. команда  docker images, оттуда IMAGE ID
docker image rm 34b7e2adebf0
а потом пересобрать заново

Затем запуск виртуальной сети
docker run -dit --rm -p 4200:4200 --name pizza-running-app pizza-app
где
запуск контейнер= виртуальную среду
-d daemon запустить в фоновом процессе как demon-режим
-it interactive cli позволяет работать внутри контейнера с терминалом  bash
--rm  флаг позволяет удалить контейнер сразу, как его будем останавливать. Это нам нужно сейчас, тк потом не планируем еще его запускать
-p 4200:4200  пробросить порты и связать откр наружу порт в докер с 4200на компе, чтобы по http://localhost:4200/ зайти в приложение
--name pizza-running-app имя запущенного приложения
pizza-app имя образа

в результате запуска этйо команды получаем в ответ уникальный хеш созданного контейнера

идем http://localhost:4200/
Страница недоступнаСайт localhost не отправил данных.
ERR_EMPTY_RESPONSE

Посмотреть лог  docker logs хеш

docker logs 5abf4aabacb87bd9092e4c1625f2231bbce810f5fac6cccf092822a821ec14b1
Node.js version v19.9.0 detected.
Odd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/previous-releases/.
? Would you like to share pseudonymous usage data about this project with the Angular Team
at Google under Google's Privacy Policy at https://policies.google.com/privacy. For more
 ошибка, что ждет ответ y/n

Чтобы автоматически дать ответ, добавим в строку следущее:   echo "N" |
вместо CMD ng serve  --host 0.0.0.0 --port 4200
CMD echo "N" | ng serve  --host 0.0.0.0 --port 4200

однако теперь нужно контейнер остановить, удалить, потом удалить образ и пересоздать все заново, тк меняли сам образ

docker ps
PS ....> docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                    NAMES
5abf4aabacb8   pizza-app   "docker-entrypoint.s…"   12 minutes ago   Up 12 minutes   0.0.0.0:4200->4200/tcp   pizza-running-app

остановить:   docker stop CONTAINER_ID
docker stop 5abf4aabacb8

 еще раз посмотреть те контейнеры, которые в данный момент запущены
 docker ps
 а если нужно посмотреть ВСЕ контейнеры
 docker ps -a

посмотреть все образы
docker images

REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
pizza-app    latest    34b7e2adebf0   48 minutes ago   806MB

удаляем образ:   docker rmi IMAGE_ID
docker rmi 34b7e2adebf0

docker images
образов нет

заново билд
docker build -t pizza-app .

затем
docker run -dit --rm -p 4200:4200 --name pizza-running-app pizza-app
docker run -dit  -p 4200:4200 --name pizza-running-app pizza-app
получаем
c3ba0693850eb679162102a52f5768f4677deac1ce59073c4a86e27629565a8f

еще раз см логи по новому хеш
 docker logs c3ba0693850eb679162102a52f5768f4677deac1ce59073c4a86e27629565a8f
еще раз  docker logs c3ba0693850eb679162102a52f5768f4677deac1ce59073c4a86e27629565a8f

покажет, что запущен
** Angular Live Development Server is listening on 0.0.0.0:4200, open your browser on http://localhost:4200/ **

внесли изменения в проект - ничего не изм. Для нового запуска

смотрим номер
 docker ps
 CONTAINER ID   IMAGE       COMMAND                  CREATED         STATUS         PORTS                    NAMES
 c3ba0693850e   pizza-app   "docker-entrypoint.s…"   6 minutes ago   Up 6 minutes   0.0.0.0:4200->4200/tcp   pizza-running-app

останавливаем по номеру
docker stop c3ba0693850e

 еще раз см ВСЕ
docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
пусто


docker build -t pizza-app .
docker run -dit  -p 4200:4200 --name pizza-running-app pizza-app

docker ps -a
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                    NAMES
35611388d122   pizza-app   "docker-entrypoint.s…"   45 seconds ago   Up 40 seconds   0.0.0.0:4200->4200/tcp   pizza-running-app
docker stop 35611388d122

docker ps -a
CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS                       PORTS     NAMES
35611388d122   pizza-app   "docker-entrypoint.s…"   13 minutes ago   Exited (137) 9 seconds ago             pizza-running-app
===============
выполнить команду внутри окружения контейнера. не в терминале, а внутри окруж контайнера
docker exec -it 35611388d122 cat /frontend/README.md
docker exec -it выполнить в окружении контейнера
cat - посмотреть содержимое файла
полный путь /frontend/README.md
===
можно запустить терминал 2 ок, но 1 вариант не сработала
docker exec -it 35611388d122 /bin/bash - не сработало
docker exec -it 35611388d122 sh

/frontend # приглашение к вводу
для выхода ввести exit

 docker stop 35611388d122
35611388d122

 docker stop 35611388d122
35611388d122

 docker rm  35611388d122
35611388d122

 docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

docker images
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
pizza-app    latest    bf7db69cc894   27 minutes ago   806MB

docker rmi bf7db69cc894
Untagged: pizza-app:latest
Deleted: sha256:bf7db69cc89424912a581c7320603bf5b794b331c08a9c6eb92d6bded1a1d0e0
===========================
зачем - для билда


+ AS build
+ RUN npm run build
- EXPOSE 4200
- CMD ng serve  --host 0.0.0.0 --port 4200
=======================================ЧАСТЬ 1
FROM node:19-alpine AS build
WORKDIR /frontend
RUN npm install -g @angular/cli
COPY package.json .
RUN npm install --force
COPY . .
RUN npm run build
===================
далее нам нужен nginx для отдачи сборки
ищем nginx в https://hub.docker.com/_/nginx

как исп:
    FROM nginx
    COPY static-html-directory /usr/share/nginx/html

по поиску nginx config for angular app примерный шаблон нашли, его в файл ( меняли еще root /usr/share/nginx/html;)
+файл nginf.conf
server {
  listen 9090;
  server_name localhost;
location / {
  root /usr/share/nginx/html;
  index index.html index.htm;
  try_files $uri $uri/ /index.html;
  }
error_page 50 502 503 504 /50x.html;
  location = /50x.html {
  root html;
  }
}

==========итого ЧАСТЬ 2=======
FROM nginx
COPY nginf.conf /etc/nginx/conf.d/default.conf
COPY --from=build /frontend/dist/pizza /usr/share/nginx/html
EXPOSE 9090
==================================
чтобы узнать,как будет папка называться
npm install
npm run build
тут получилась папка /dist/pizza.  именно ее и указать ПОСЛЕ /frontend/dist/   , т.е. /frontend/dist/pizza
куда - пишем  /usr/share/nginx/html
=================





==========
FROM node:19-alpine AS build
WORKDIR /frontend
RUN npm install -g @angular/cli
COPY package.json .
RUN npm install --force
COPY . .
RUN npm run build

FROM nginx
COPY nginf.conf /etc/nginx/conf.d/default.conf
COPY --from=build /frontend/dist/pizza /usr/share/nginx/html
EXPOSE 9090
====================

затем заново билд
docker build -t pizza-app .

нужно запустить наш контейнер
docker images

затем  вместо docker run -dit  -p 4200:4200 --name pizza-running-app pizza-app
ЗАПУСК:
 docker run  -p 8000:9090 -d  pizza-app
44913efae078e7727d49e5ab7c1fab3a8a57d19e2d60f63247c8108fc6300dac


-d  в режиме демона
8000 порт вместо 4200 (любой)
9090 тот, что указан в файле Dockerfile
pizza-app имя репозитория в docker images
----------
====================================================================
***==========================================================
ЕСЛИ МЕНЯЕМ ЧТО-ТО- ПОСЛЕДОВАТЕЛЬНОСТЬ ДЕЙСТВИЙ
  !!!если что-то изменили
1 посмотреть контейнеры
docker ps
2  если есть, остановить
docker stop CONTAINER_ID

3 посмотреть, что есть
docker ps -a
4 удалить
docker rm a956791dc107
a956791dc107

docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
пусто

5 посмотреть images
 docker images
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
pizza-app    latest    ccac149a8cad   16 minutes ago   195MB

6 удалить  docker rmi  IMAGE ID
docker image rm 4dfh63gd
или
 docker rmi  ccac149a8cad
Untagged: pizza-app:latest
Deleted: sha256:ccac149a8cad32d1ab5b9675d8aa1a02031b86e6a73cffc2392c9829bddb0822
=========

7 опять билд
docker build -t pizza-app .

8 запуск
 docker run  -p 8000:9090 -d  pizza-app

===============================
***==========================================================
можно сделать так, чтобы мы сборку делали локально, а потом в докер-контейнер копировали ее
тогда закомментированное удалить, но это бессмысленно

FROM node:19-alpine AS build
WORKDIR /frontend

//RUN npm install -g @angular/cli
//COPY package.json .
//RUN npm install --force
//COPY . .
//RUN npm run build

FROM nginx
COPY nginf.conf /etc/nginx/conf.d/default.conf
COPY --from=build /frontend/dist/pizza /usr/share/nginx/html
EXPOSE 9090
==================================================================================
Delete Node Modules folder from project folder.Run below command
npm cache clean --force npm install
It should work.

https://techrocks.ru/2021/10/17/beginners-guide-to-docker/
============
ЕЩЕ РАЗ
========================== Dockerfile (1вариант- для serve)
FROM node:19-alpine
WORKDIR /frontend
RUN npm install -g @angular/cli
COPY package.json .
RUN npm install --force
COPY . .
EXPOSE 4200
CMD echo "N" | ng serve  --host 0.0.0.0 --port 4200
===============2 (2вариант- для  build)
FROM node:19-alpine AS build
WORKDIR /frontend
RUN npm install -g @angular/cli
COPY package.json .
RUN npm install --force
COPY . .
RUN npm run build

FROM nginx
COPY nginf.conf /etc/nginx/conf.d/default.conf
COPY --from=build /frontend/dist/pizza /usr/share/nginx/html
EXPOSE 9090
=============


не запускается, решения
1.
CMD echo "N" | ng serve  --host 0.0.0.0 --port 4200
это с ответом на вопрос ('n'), would uou like.... ?

2.
очистка кеша помогла
 docker system prune
==========
***==========================================================
ЕСЛИ МЕНЯЕМ ЧТО-ТО- ПОСЛЕДОВАТЕЛЬНОСТЬ ДЕЙСТВИЙ (см выше)
***==========================================================
+
потом все также удалить
+
 docker system prune
=======

!были установлены
WSL служба
Docker
vmmem висит в процессах вместе с Docker, после перезагрузки - нет, если его откл в автозагрузке
